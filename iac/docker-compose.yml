version: '3.8'

# This configuration creates a private, virtual network where each server
# has a predictable, static IP address that you control.

services:
  id_manager_1:
    build:
      context: ../../apps/id_manager
      dockerfile: ./id_manager/Dockerfile
    container_name: id_manager_1
    networks:
      simulated_lan:
        # Assign a static IP within the virtual network
        ipv4_address: 172.20.0.10

  id_manager_2:
    build:
      context: ../../apps/id_manager
      dockerfile: ./id_manager/Dockerfile
    container_name: id_manager_2
    networks:
      simulated_lan:
        ipv4_address: 172.20.0.11

  client:
    build:
      context: ../../apps/client
      dockerfile: ./client/Dockerfile
    container_name: client
    # The client must be told the specific IP of the server to target
    command: [ "pnpm", "start", "172.20.0.10", "8080" ]
    networks:
      - simulated_lan
    volumes:
      - ./logs:/data
    depends_on:
      - id_manager_1
      - id_manager_2

networks:
  simulated_lan:
    # Use the standard bridge driver to create a private virtual network
    driver: bridge
    # Configure the IP Address Management (IPAM) for this network
    ipam:
      config:
        - subnet: 172.20.0.0/16 # Define the IP range for your virtual network